


CREATE COMPUTE MODULE CurrencyConverter
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		DECLARE inBody REFERENCE To InputRoot.XMLNSC.ns:CurrencyConverterRequest.ns:eAI_BODY;
		CALL CopyEntireMessage();
		CALL CurrencyConverter(inBody);
		--SET OutputRoot.XMLNSC.ns:CurrencyConverterReply.ns:eAI_STATUS.ns:returnStatus.ns:returnCode = '000000';
		--SET OutputRoot.XMLNSC.ns:CurrencyConverterReply.ns:eAI_STATUS.ns:returnStatus.ns:returnCodeDesc = '000000';
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	CREATE PROCEDURE CurrencyConverter(INOUT inBody REFERENCE ) BEGIN
		DECLARE sellRate ROW;
		DECLARE exchangeRate DECIMAL;
		DECLARE amount DECIMAL;
		DECLARE sql CHARACTER;
		SET sql = 'SELECT FT_EXCHANGE_RATES.SELL_RATE AS  "sellRate",
		FT_EXCHANGE_RATES.CURRENCY_CODE AS "currencyCode"
		FROM FT_EXCHANGE_RATES
		WHERE FT_EXCHANGE_RATES.CURRENCY_CODE = ''' || inBody.ns:fromCurrency ||
		''' OR FT_EXCHANGE_RATES.CURRENCY_CODE = ''' || inBody.ns:toCurrency || '''';
		SET sellRate.rates[] = PASSTHRU(sql);
		IF sellRate.rates[1].currencyCode = inBody.ns:fromCurrency THEN
			set exchangeRate = CAST(sellRate.rates[1].sellRate AS DECIMAL(6,4)) / CAST(sellRate.rates[2].sellRate AS DECIMAL(6,4));
		ELSE
			set exchangeRate = CAST(sellRate.rates[2].sellRate AS DECIMAL(6,4)) / CAST(sellRate.rates[1].sellRate AS DECIMAL(6,4));
		END IF;
		SET OutputRoot.XMLNSC.ns:CurrencyConverterReply.ns:eAI_BODY.ns:exchangeRate = exchangeRate;
		SET amount = exchangeRate * CAST(inBody.ns:amount AS DECIMAL);
		SET OutputRoot.XMLNSC.ns:CurrencyConverterReply.ns:eAI_BODY.ns:equivalentAmount = amount;
	END;
END MODULE;
