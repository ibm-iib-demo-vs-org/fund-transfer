



CREATE COMPUTE MODULE ReleaseAccountHoldRequest
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		DECLARE inputRef REFERENCE TO InputRoot.XMLNSC.ns:ReleaseAccountHoldRequest;
		DECLARE outRef REFERENCE TO OutputRoot.XMLNSC.ns:ReleaseAccountHoldReply;
		DECLARE holdAmount CHARACTER;
		CALL ReleaseAccountHoldRequest(inputRef.ns:eAI_BODY.ns:accountNumber, inputRef.ns:eAI_BODY.ns:holdReference, holdAmount);
		CALL updateAccountsTable(inputRef.ns:eAI_BODY.ns:accountNumber, holdAmount);
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;

	CREATE PROCEDURE ReleaseAccountHoldRequest(IN accountNo CHARACTER, IN holdRef CHARACTER, out holdAmount CHARACTER) BEGIN
		DECLARE sqlQuery CHARACTER;
		DECLARE result ROW;
		set result.holdAmount[] = PASSTHRU('SELECT TO_CHAR(SUM(AMOUNT)) as "amount" FROM FT_ACCOUNT_HOLD WHERE ACCOUNT_NO = ' || accountNo) ;
		SET holdAmount = result.holdAmount[1].amount;
		SET sqlQuery = 'DELETE FROM FUND_TRANSFER_MW.FT_ACCOUNT_HOLD WHERE ACCOUNT_NO = ' || accountNo || ' AND HOLD_REF = ' || holdRef;
		PASSTHRU(sqlQuery);
		--DELETE FROM Database.FUND_TRANSFER_MW.FT_ACCOUNT_HOLD AS h WHERE h.ACCOUNT_NO = accountNo AND h.HOLD_REF = holdRef;
	END;
	create PROCEDURE updateAccountsTable(IN accountNo CHARACTER, IN holdAmount CHARACTER) BEGIN

		DECLARE sql CHARACTER;
		SET sql = 'UPDATE FT_ACCOUNT
		SET TOTAL_HOLD_AMOUNT = TOTAL_HOLD_AMOUNT - ' || holdAmount ||',
		AVAILABLE_BALANCE = AVAILABLE_BALANCE + ' || holdAmount || '
		WHERE ACCOUNT_NUMBER = ' || accountNo || ';
		';
		PASSTHRU(sql);
		-- 'DECLARE
		-- holdAmount NUMBER(17,4) ;
		-- BEGI
		-- SELECT SUM(AMOUNT)
		-- INTO holdAmount
		-- FROM FT_ACCOUNT_HOLD
		-- WHERE ACCOUNT_NO = ' || accountNo || ';
		-- UPDATE FT_ACCOUNT
		-- SET TOTAL_HOLD_AMOUNT = holdAmount,
		-- AVAILABLE_BALANCE = AVAILABLE_BALANCE + (TOTAL_HOLD_AMOUNT - holdAmount)
		-- WHERE ACCOUNT_NUMBER = ' || accountNo || ';
		-- END;
		-- ';

	END;
END MODULE;