






CREATE COMPUTE MODULE addInternalBeneficiary
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();

		CALL addBeneficiary();
		SET OutputRoot.XMLNSC.ns:AddBeneficiaryReply.ns:eAI_BODY = NULL;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	CREATE PROCEDURE addBeneficiary() BEGIN
		DECLARE inRoot REFERENCE TO InputRoot.XMLNSC.ns:AddBeneficiaryRequest.ns:eAI_BODY.ns:internalBeneficiary;
		DECLARE SQL CHARACTER;
		SET SQL = 'INSERT INTO FT_BENEFICIARY(CUSTOMER_NO, BENEFICIARY_NICK_NAME, BENEFICIARY_ACCOUNT, BENEFICIARY_NAME, RECEIVED_TRANSFER) VALUES( ''' ||
		inRoot.ns:customerNumber || ''',''' || inRoot.ns:nickName || ''',''' || inRoot.ns:IBAN || ''',''' || inRoot.ns:name || ''',''' ||
		inRoot.ns:receivedTransfer || ''')' ;
		-- SET OutputRoot.BLOB.SQL = SQL;
		PASSTHRU(SQL);
		-- INSERT
		-- INTO Database.FUND_TRANSFER_MW.FT_BENEFICIARY
		-- (
		-- CUSTOMER_NO,
		-- BENEFICIARY_NICK_NAME,
		-- BENEFICIARY_ACCOUNT,
		-- BENEFICIARY_NAME
		-- )
		-- VALUES
		-- (
		-- inRoot.ns:customerNumber,
		-- inRoot.ns:nickName,
		-- inRoot.ns:IBAN,
		-- inRoot.ns:name
		-- );

	END;
END MODULE;